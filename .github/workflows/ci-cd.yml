# .github/workflows/ci-cd.yml
name: Build, Secure and Deploy to AKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  codeql:
    name: Analyze Code with CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Nâng cấp cả checkout lên v4 cho mới nhất

    # 1. Khởi tạo CodeQL - Đã nâng cấp lên v3
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'php'

    # 2. Chạy phân tích - Đã nâng cấp lên v3
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  build-and-scan:
    name: Build & Scan Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Nâng cấp cả checkout lên v4

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3 # Nâng cấp lên v3
      with:
        registry: ${{ secrets.ACR_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5 # Nâng cấp lên v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.ACR_NAME }}.azurecr.io/php-web-ban-hang:${{ github.sha }}

    - name: Scan image for vulnerabilities with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.ACR_NAME }}.azurecr.io/php-web-ban-hang:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  deploy:
    name: Deploy to AKS
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [build-and-scan, codeql]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Nâng cấp cả checkout lên v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        cluster-name: ${{ secrets.CLUSTER_NAME }}

    - name: Replace Image Placeholder in deployment.yaml
      run: |
        IMAGE_NAME="${{ secrets.ACR_NAME }}.azurecr.io/php-web-ban-hang:${{ github.sha }}"
        sed -i "s|__IMAGE_PLACEHOLDER__|${IMAGE_NAME}|g" kubernetes/deployment.yaml

    - name: Deploy to AKS
      uses: Azure/k8s-deploy@v4
      with:
        action: 'deploy'
        manifests: |
          kubernetes/deployment.yaml
          kubernetes/service.yaml
          kubernetes/ingress.yaml
